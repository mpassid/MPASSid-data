
- include_vars: secure.yml

- name: Install httpd and ssl with shibboleth
  yum:
    name:
      - python 
      - python-virtualenv 
      - postgresql
      - postgresql-server
      - python-psycopg2
      - libsemanage-python
      - openssl-devel 
      - openldap-devel 
      - gcc 
      - make 
      - which 
      - sed 
      - gawk 
      - sudo 
      - bash 
      - wget
      - rsync
      - git
      - expect
    state: latest

- name: Ensure PostgreSQL database is initialized.
  become: yes
  become_user: postgres
  ignore_errors: yes        
  command: /bin/postgresql-setup initdb


- name: Copy other files
  copy:
    src: templates/{{ item }}
    dest: /var/lib/pgsql/data/
    mode: 0644
  with_items:
    - pg_hba.conf
    - postgresql.conf


- name: Enable and start postgresql
  systemd:
    name: postgresql
    enabled: yes
    masked: no
    state: started


- name: Add user account to run application with  
  user:
    name: educloud
    shell: /bin/bash
    groups: root
    append: yes
    system: yes


- name: Create directory for application 
  file:
    path: "{{ secure.app_root }}/mpass-data"
    owner: educloud
    group: root
    mode: 0777
    state: directory 
    recurse: yes


# - name: Remove files from build tmp
#  commad: /bin/find "{{ secure.git_repo }}" -delete

- name: Remove build dir
  file:
    state: absent
    path: "{{ secure.git_repo }}"


- name: Create build dir
  file:
    state: directory
    path: "{{ secure.git_repo }}"
    owner: educloud
    mode: 0777


- name: Get MPASSid from GIT source to build home
  git:
    repo: 'https://github.com/mpassid/MPASSid-data'
    dest: "{{ secure.git_repo }}/mpass-data"


- name: Copy files to application home
  synchronize:
    src: "{{ secure.git_repo }}/mpass-data/"
    dest: "{{ secure.app_root }}/mpass-data"
    archive: yes
  delegate_to: "{{ inventory_hostname }}"


- name: Change ownersip to educloud 
  file:
    path: "{{ secure.app_root }}"
    owner: educloud
    recurse: yes

- name: Create directory for logs
  file:
    path: /var/log/mpass-data
    state: directory
    owner: educloud

- name: Copy other files needed by application
  copy:
    src: templates/{{ item }}
    dest: "{{ secure.app_root }}/mpass-data"
    mode: 0777
  with_items:
    - gafe-keys.json


- name: File Templates
  template: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode }} owner={{ item.owner }} group={{ item.owner }}
  with_items:
    - { src: db_user.sql.j2, dest: "{{ secure.app_root }}/mpass-data/db_user.sql", mode: "0777", owner: educloud }
    - { src: db_user.sh.j2, dest: "{{ secure.app_root }}/mpass-data/db_user.sh", mode: "0777", owner: educloud }
    - { src: local_settings.py.j2, dest: "{{ secure.app_root }}/mpass-data/local_settings.py", mode: "0777", owner: educloud }
    - { src: venv.sh.j2, dest: "{{ secure.app_root }}/mpass-data/venv.sh", mode: "0777", owner: educloud }
    - { src: run-service.sh.j2, dest: "{{ secure.app_root }}/mpass-data/run-service.sh", mode: "0777", owner: educloud }
    - { src: mpass-gunicorn.service.j2, dest: "/usr/lib/systemd/system/mpass-gunicorn.service", mode: "0777", owner: root }
    - { src: run-migrate.sh.j2, dest: "{{ secure.app_root }}/mpass-data/run-migrate.sh", mode: "0777", owner: educloud }
    - { src: mpass.conf.j2, dest: /etc/httpd/conf.d/mpass.conf, mode: "0644", owner: root }
    - { src: mpass-data.j2, dest: /etc/logrotate.d/mpass-data, mode: "0644", owner: root }  


- name: Create production database
  become: true
  become_user: postgres
  postgresql_db:
    name:  "{{ secure.postgres.db_name }}"
    state: present
    template: template0
    encoding: UTF-8


- name: Create production database users
  become: true
  become_user: postgres
  postgresql_user:
    db: "{{ secure.postgres.db_name }}"
    name: "{{ secure.postgres.db_user }}"
    password: "{{ secure.postgres.db_pass }}"
    priv: ALL
    state: present


- name: Create Python virtual environment & install requirements
  become: true
  become_user: educloud        
  command: "{{ secure.app_root }}/mpass-data/venv.sh"  


- name: Run migrate if nesecary
  command: "{{ secure.app_root }}/mpass-data/run-migrate.sh"
  become: true
  become_method: sudo
  become_user: educloud
  when: make_migrations

- name: Allow apache to connet to gunicorn
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes 

- name: Enable and start mpass-dataservice
  systemd:
    name: mpass-gunicorn
    enabled: yes
    masked: no
    state: restarted

- name: Test user
  shell: |
    spawn sudo educloud "source {{ secure.app_root }}/env/bin/activate && python {{ secure.app_root }}/mpass-data/manage.py createsuperususer --username {{ secure.postgres.db_user }} --email test@test.com"
    expect "Password: "
    send {{ secure.postgres.db_pass | regex_escape() }}\r
    expect "Password (again): "
    send {{ secure.postgres.db_pass | regex_escape() }}\r
    interact
    exit 0
  args:
    executable: /usr/bin/expect
    chdir: "{{ secure.app_root }}/mpass-data"
