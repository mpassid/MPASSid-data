# -*- encoding: utf-8 -*-

# The MIT License (MIT)
#
# Copyright (c) 2014-2015 Haltu Oy, http://haltu.fi
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

import os

if 'TRAVIS' in os.environ:
  DATABASES = {
  'default': {
    'ENGINE': 'django.db.backends.postgresql_psycopg2',
    'NAME': 'authdata',
    'USER': 'authdata',
    'PASSWORD': 'authdata',
    }
  }
else:
  DATABASES = {
    'default': {
    'ENGINE': 'django.db.backends.postgresql_psycopg2',
      'NAME': '{{ secure.postgres.db_name }}',
      'HOST': '{{ secure.postgres.db_serv }}',
      'USER': '{{ secure.postgres.db_user }}',
      'PASSWORD': '{{ secure.postgres.db_pass }}',
    }
  }

USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


AUTH_EXTERNAL_SOURCES = {
  'ldap_test': ['authdata.datasources.ldap_base', 'TestLDAPDataSource', {
    'host': 'ldaps://86.50.170.135',
    'username': 'uid=robot001,ou=Robots,dc=mpass-test,dc=csc,dc=fi',
    'password': 'robot001'
  }],
}

AUTH_EXTERNAL_ATTRIBUTE_BINDING = {
  'ldap_test': 'ldap_test',
}

AUTH_EXTERNAL_MUNICIPALITY_BINDING = {
  'KuntaYksi': 'ldap_test',
}




LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'root': {
      'level': 'DEBUG',
      'handlers': ['console', 'file'],
    },
    'formatters': {
      'normal': {
        'format': '%(asctime)s %(levelname)s %(name)s %(thread)d %(lineno)s %(message)s %(data)s'
      },
      'verbose': {
        'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s %(data)s'
      },
    },
    'filters': {
      'default': {
        '()': 'project.logging_helpers.Filter',
      },
    },
    'handlers': {
      'console': {
        'level': 'DEBUG',
        'class': 'logging.StreamHandler',
        'formatter': 'verbose',
        'filters': ['default'],
      },
      'file': {
        'level': 'DEBUG',
        'class': 'logging.handlers.WatchedFileHandler',
        'filename': '/var/log/mpass-data/authdata.log',
        'formatter': 'verbose',
      },
      'logstash': {
        'level': 'DEBUG',
        'class': 'logstash.TCPLogstashHandler',
        'host': '127.0.0.1',
        'port': 5959, # Default value: 5959
        'version': 1, # Version of logstash event schema. Default value: 0 (for backward compatibility of the library)
        'message_type': 'django',  # 'type' field in logstash message. Default value: 'logstash'.
        'fqdn': False, # Fully qualified domain name. Default value: false.
        'tags': ['django.request'], # list of tags. Default: None.
      },
    },
    'loggers': {
      'django': {
        'level': 'WARNING',
        'handlers': ['console', 'file'],
        'propagate': True,
      },
      'authdata': {
        'handlers': ['console', 'file'],
        'level': 'DEBUG',
        'propagate': False,
      },
      '': {
        'handlers': ['console', 'file'],
        'level': 'DEBUG',
        'propagate': False,
      },
    },
}
